generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String         @id @default(uuid())
  sessionId              String         @unique
  course                 String
  username               String
  messages               Message[]
  conversationsAsUserOne Conversation[] @relation("UserOne")
  conversationsAsUserTwo Conversation[] @relation("UserTwo")
  createdAt              DateTime       @default(now())
  updatedAt              DateTime?      @updatedAt
}

model Conversation {
  id String @id @default(uuid())

  userOneId String
  userTwoId String
  userOne   User   @relation("UserOne", fields: [userOneId], references: [id])
  userTwo   User   @relation("UserTwo", fields: [userTwoId], references: [id])

  isActive      Boolean   @default(true) // Allows chat to be ended
  messages      Message[]
  history       History?
  historyId     String?
  createdAt     DateTime  @default(now())
  lastMessageAt DateTime  @default(now())
}

model Message {
  id             String       @id @default(uuid())
  senderId       String
  sender         User         @relation(fields: [senderId], references: [id], onDelete: Cascade)
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  content        String
  isSeen         Boolean      @default(false)
  seenAt         DateTime?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime?    @updatedAt
}

model History {
  id             String       @id @default(uuid())
  conversationId String       @unique
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  content        String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime?    @updatedAt
}
